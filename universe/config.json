{
  "type": "object",
  "properties": {
    "service": {
      "type": "object",
      "description": "DC/OS service configuration properties",
      "properties": {
        "name": {
          "description": "The name of the service instance",
          "type": "string",
          "default": "hivemq",
          "title": "Service name"
        },
        "user": {
          "description": "The user that the service will run as.",
          "type": "string",
          "default": "root",
          "title": "User"
        },
        "service_account": {
          "description": "The service account for DC/OS service authentication. This is typically left empty to use the default unless service authentication is needed. The value given here is passed as the principal of Mesos framework.",
          "type": "string",
          "default": ""
        },
        "service_account_secret": {
          "description": "Name of the Secret Store credentials to use for DC/OS service authentication. This should be left empty unless service authentication is needed.",
          "type": "string",
          "default": "",
          "title": "Credential secret name (optional)"
        },
        "virtual_network_enabled": {
          "description": "Enable virtual networking",
          "type": "boolean",
          "default": false
        },
        "virtual_network_name": {
          "description": "The name of the virtual network to join",
          "type": "string",
          "default": "dcos"
        },
        "virtual_network_plugin_labels": {
          "description": "Labels to pass to the virtual network plugin. Comma-separated key:value pairs. For example: k_0:v_0,k_1:v_1,...,k_n:v_n",
          "type": "string",
          "default": ""
        },
        "log_level": {
          "description": "The log level for the DC/OS service.",
          "type": "string",
          "enum": [
            "OFF",
            "FATAL",
            "ERROR",
            "WARN",
            "INFO",
            "DEBUG",
            "TRACE",
            "ALL"
          ],
          "default": "INFO"
        },
        "sleep": {
          "description": "The sleep duration in seconds before tasks exit.",
          "type": "number",
          "default": 1000
        }
      },
      "required": [
        "name",
        "sleep",
        "user"
      ]
    },
    "node": {
      "description": "HiveMQ pod configuration properties",
      "type": "object",
      "properties": {
        "count": {
          "title": "Node count",
          "description": "Number of hivemq pods to run",
          "type": "integer",
          "default": 3
        },
        "placement_constraint": {
          "title": "Placement constraint",
          "description": "Placement constraints for nodes. Example: [[\"hostname\", \"UNIQUE\"]]",
          "type": "string",
          "default": "[]",
          "media": {
            "type": "application/x-zone-constraints+json"
          }
        },
        "cpus": {
          "title": "CPU count",
          "description": "hivemq pod CPU requirements",
          "type": "number",
          "default": 1,
          "minimum": 1
        },
        "mem": {
          "title": "Memory size (MB)",
          "description": "hivemq pod mem requirements (in MB)",
          "type": "integer",
          "default": 512
        },
        "disk": {
          "title": "Disk size (MB)",
          "description": "hivemq pod persistent disk requirements (in MB)",
          "type": "integer",
          "default": 250
        },
        "disk_type": {
          "title": "Disk type [ROOT, MOUNT]",
          "description": "Mount volumes require preconfiguration in DC/OS",
          "enum": [
            "ROOT",
            "MOUNT"
          ],
          "default": "ROOT"
        },
        "rlimits": {
          "description": "POSIX resource limits applied to the pod. Excercise caution when modifying these default values as it can lead to spurious task failures.",
          "type": "object",
          "properties": {
            "rlimit_nofile": {
              "description": "Specifies RLIMIT_NOFILE, a value one greater than the maximum file descriptor number that can be opened by this process.",
              "type": "object",
              "properties": {
                "soft": {
                  "type": "integer",
                  "description": "The  soft  limit  is  the  value that the kernel enforces for the corresponding resource.",
                  "default": 128000,
                  "minimum": 128000
                },
                "hard": {
                  "type": "integer",
                  "description": "The  hard  limit  acts as a ceiling for the soft limit.",
                  "default": 128000,
                  "minimum": 128000
                }
              }
            }
          }
        }
      },
      "required": [
        "count",
        "cpus",
        "mem",
        "disk",
        "disk_type",
        "rlimits"
      ]
    },
    "hivemq": {
      "description": "HiveMQ specific configuration properties",
      "type": "object",
      "properties": {
        "hivemq_log_level": {
          "description": "The log level for HiveMQ.",
          "type": "string",
          "enum": [
            "OFF",
            "ERROR",
            "WARN",
            "INFO",
            "DEBUG",
            "TRACE",
            "ALL"
          ],
          "default": "INFO"
        },
        "java_options": {
          "description": "JAVA_OPTS to pass to the java process",
          "type": "string",
          "default": "-XX:+UnlockExperimentalVMOptions -XX:+UseContainerSupport -XX:InitialRAMPercentage=60 -XX:MaxRAMPercentage=70 -XX:MinRAMPercentage=40 -XX:+UseNUMA"
        },
        "license": {
          "type": "string",
          "description": "Add a (base64 encoded) license at startup, leave empty to start in evaluation mode",
          "default": ""
        },
        "cluster_replica_count": {
          "title": "Cluster replica count",
          "description": "Number of cluster replica",
          "type": "integer",
          "default": 2,
          "minimum": 1
        },
        "cluster_overload_protection": {
          "title": "Cluster overload protection",
          "description": "Enable cluster overload protection",
          "type": "boolean",
          "default": true
        },
        "control_center_enabled": {
          "title": "Control Center enabled",
          "description": "Enable control center",
          "type": "boolean",
          "default": true
        },
        "control_center_user": {
          "title": "Control Center user",
          "description": "User for the control center login",
          "type": "string",
          "default": "admin"
        },
        "control_center_password": {
          "title": "Control Center password",
          "description": "Password for the control center login",
          "type": "string",
          "default": "hivemq"
        },
        "metrics_enabled": {
          "title": "Push metrics",
          "description": "Push HiveMQ metrics to the DCOS StatsD agent, for use with e.g. Prometheus on DCOS",
          "type": "boolean",
          "default": true
        },
        "metrics_interval": {
          "title": "Metrics push interval",
          "description": "Metrics push interval (resolution) in seconds for HiveMQ metrics. Note that if you are using Prometheus, you may need to adjust the Prometheus scrape configuration as well in order to get higher resolution",
          "type": "integer",
          "default": 5,
          "minimum": 1
        },
        "restrictions": {
          "description": "Restrictions to limit the load on a broker",
          "type": "object",
          "properties": {
            "max_client_id_length": {
              "title": "Max client id length",
              "description": "Maximum client id length in bytes",
              "type": "integer",
              "default": 65535
            },
            "max_topic_length": {
              "title": "Max topic length",
              "description": "Maximum topic length in bytes",
              "type": "integer",
              "default": 65535
            },
            "max_connections": {
              "title": "Max connections",
              "description": "Maximum total MQTT connections for a single broker",
              "type": "integer",
              "default": -1,
              "minimum": -1
            },
            "incoming_bandwidth_throttling": {
              "title": "Incoming bandwidth throttling",
              "description": "Incoming bandwidth maximum bytes per second",
              "type": "integer",
              "default": 0,
              "minimum": 0
            },
            "no_connect_idle_timeout": {
              "title": "CONNECT idle timeout",
              "description": "Timeout in milliseconds before disconnecting a client which doesn't send a CONNECT packet",
              "type": "integer",
              "default": 10000
            }
          },
          "additionalProperties": false,
          "required": [
            "no_connect_idle_timeout",
            "max_topic_length",
            "max_client_id_length",
            "max_connections",
            "incoming_bandwidth_throttling"
          ]
        }
      },
      "additionalProperties": false,
      "required": [
        "cluster_replica_count",
        "cluster_overload_protection",
        "control_center_enabled",
        "control_center_user",
        "control_center_password",
        "restrictions",
        "java_options"
      ]
    },
    "mqtt": {
      "description": "MQTT specific configuration properties",
      "type": "object",
      "properties": {
        "limits": {
          "description": "Limits and toggles for specific protocol features",
          "type": "object",
          "properties": {
            "session_expiry_interval": {
              "title": "Session expiry interval",
              "description": "Duration (in seconds) that has to pass after the client disconnected, before its session expires",
              "type": "integer",
              "default": 4294967296,
              "minimum": 0
            },
            "max_packet_size": {
              "title": "Max packet size",
              "description": "The maximum size of any MQTT packet in bytes that will be accepted by the broker",
              "type": "integer",
              "default": 268435460
            },
            "server_receive_maximum": {
              "title": "Server receive maximum",
              "description": "The maximum amount of PUBLISH messages, which have not yet been acknowledged by the broker, each client is allowed to send",
              "type": "integer",
              "default": 10
            },
            "keepalive_max": {
              "title": "Keep alive maximum",
              "description": "The maximum value of the keepAlive field in the CONNECT packet of the client that will be accepted by the broker",
              "type": "integer",
              "default": 65535
            },
            "keepalive_allow_unlimited": {
              "title": "Keep alive allow unlimited",
              "description": "Whether or not the broker will accept connections by clients that sent a CONNECT packet with a keepAlive=0 setting",
              "type": "boolean",
              "default": true
            },
            "topic_alias_enabled": {
              "title": "Topic alias enabled",
              "description": "Whether or not the broker will allow MQTT 5 clients to use topic-alias",
              "type": "boolean",
              "default": true
            },
            "topic_alias_max_per_client": {
              "title": "Topic alias max per client",
              "description": "Maximum topic aliases a single client can use",
              "type": "integer",
              "default": 5
            },
            "subscription_identifier_enabled": {
              "title": "Subscription identifier",
              "description": "Whether or not the broker will allow MQTT 5 clients to use subscription identifiers",
              "type": "boolean",
              "default": true
            },
            "wildcard_subscription_enabled": {
              "title": "Wildcard subscriptions",
              "description": "Whether or not the wildcard subscription feature is enabled on the broker",
              "type": "boolean",
              "default": true
            },
            "shared_subscription_enabled": {
              "title": "Shared subscriptions",
              "description": "Whether or not the shared subscription feature is enabled on the broker",
              "type": "boolean",
              "default": true
            },
            "retained_messages_enabled": {
              "title": "Retained messages",
              "description": "Whether or not the retained message feature is enabled on the broker",
              "type": "boolean",
              "default": true
            },
            "max_qos": {
              "title": "Max QoS",
              "description": "Defines the maximum Quality of Service (QoS) level, which may be used in MQTT PUBLISH messages",
              "type": "integer",
              "default": 2,
              "minimum": 0,
              "maximum": 2
            },
            "queued_message_max_queue_size": {
              "title": "Queued messages max queue size",
              "description": "Maximum amount of messages per client that will be stored on the broker",
              "type": "integer",
              "default": 1000,
              "minimum": 0
            },
            "queued_message_strategy": {
              "title": "Queued messages strategy",
              "description": "Discard strategy when message arrives at the broker and the corresponding client’s message queue is full.\ndiscard for discarding newly arriving messages. discard-oldest to discard the oldest message in the queue when a new message arrives",
              "type": "string",
              "default": "discard",
              "enum": [
                "discard",
                "discard_oldest"
              ]
            }
          },
          "additionalProperties": false,
          "required": [
            "queued_message_strategy",
            "queued_message_max_queue_size",
            "max_qos",
            "retained_messages_enabled",
            "shared_subscription_enabled",
            "wildcard_subscription_enabled",
            "subscription_identifier_enabled",
            "topic_alias_max_per_client",
            "topic_alias_enabled",
            "keepalive_allow_unlimited",
            "keepalive_max",
            "server_receive_maximum",
            "max_packet_size",
            "session_expiry_interval"
          ]
        },
        "security": {
          "type": "object",
          "description": "Security configuration",
          "properties": {
            "allow_empty_client_id": {
              "title": "Allow empty client id",
              "description": "Allows the use of empty client ids. If this is set to true, HiveMQ automatically generates random client ids, when clientId in the CONNECT packet is empty",
              "type": "boolean",
              "default": true
            },
            "payload_format_validation": {
              "title": "Payload UTF-8 validation",
              "description": "Enables the UTF-8 validation of UTF-8 PUBLISH payloads",
              "type": "boolean",
              "default": false
            },
            "topic_format_validation": {
              "title": "Topic UTF-8 validation",
              "description": "Enables the UTF-8 validation of topic names and client ids",
              "type": "boolean",
              "default": true
            },
            "allow_request_problem_information": {
              "title": "Request problem information",
              "description": "Allows the client to request the problem information. If this is set to false, no reason string and user property values will be sent to clients",
              "type": "boolean",
              "default": true
            }
          },
          "additionalProperties": false,
          "required": [
            "allow_empty_client_id",
            "payload_format_validation",
            "topic_format_validation",
            "allow_request_problem_information"
          ]
        },
        "auth": {
          "description": "HiveMQ specific configuration properties",
          "type": "object",
          "properties": {
            "enable_rbac": {
              "title": "Enable RBAC extension",
              "description": "Download and install the file RBAC extension on all nodes",
              "type": "boolean",
              "default": false
            },
            "rbac_config": {
              "title": "Configure RBAC file",
              "description": "credentials.xml configuration for users and roles",
              "type": "string",
              "media": {
                "binaryEncoding": "base64",
                "type": "application/x-yaml"
              },
              "default": "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/Pgo8ZmlsZS1yYmFjPgogICAgPHVzZXJzPgogICAgICAgIDx1c2VyPgogICAgICAgICAgICA8bmFtZT51c2VyMTwvbmFtZT4KICAgICAgICAgICAgPCEtLS0gcGFzc3dvcmQgaGFzaCBmb3IgInBhc3MxIiAtLT4KICAgICAgICAgICAgPHBhc3N3b3JkPldGTlFVVkIwVWt4ak0wNHhhMGhTUjFCUU5HaHVPVEpLVnpkbGJYQTRiams9OjEwMDpGWTEybndwVUViQks5RUtRL0F3L3JRS1NvQTdqWHNDMEhLRUx3VTJtTENWVTM5YkpWSzB6ZjROZW11RmVET0hQTzRCVzFuT2p4aTZOcG9ya0M2clVvZz09PC9wYXNzd29yZD4KICAgICAgICAgICAgPHJvbGVzPgogICAgICAgICAgICAgICAgPGlkPnJvbGUxPC9pZD4KICAgICAgICAgICAgPC9yb2xlcz4KICAgICAgICA8L3VzZXI+CiAgICAgICAgPHVzZXI+CiAgICAgICAgICAgIDxuYW1lPmFkbWluLXVzZXI8L25hbWU+CiAgICAgICAgICAgIDwhLS0gcGFzc3dvcmQgaGFzaCBmb3IgImFkbWluLXBhc3N3b3JkIiAtLT4KICAgICAgICAgICAgPHBhc3N3b3JkPlZqYzFhMGx4UTNOdmIwbGpORlZITkU5V1JuTTNSRzFJWm1kTlVGY3dWR1k9OjEwMDpQTDJGTHFmcGRoT05HN3FYakFNbWRWbjR3bE1pWG55cGRYaUZXMDl6cW9yRmhLZ29paXhGUXcyRVZKSmZFOVpuNzlxNDVWN1hwYzZKZUtMcDBudG1ZQT09PC9wYXNzd29yZD4KICAgICAgICAgICAgPHJvbGVzPgogICAgICAgICAgICAgICAgPGlkPnN1cGVydXNlcjwvaWQ+CiAgICAgICAgICAgIDwvcm9sZXM+CiAgICAgICAgPC91c2VyPgogICAgPC91c2Vycz4KICAgIDxyb2xlcz4KICAgICAgICA8cm9sZT4KICAgICAgICAgICAgPGlkPnJvbGUxPC9pZD4KICAgICAgICAgICAgPHBlcm1pc3Npb25zPgogICAgICAgICAgICAgICAgPHBlcm1pc3Npb24+CiAgICAgICAgICAgICAgICAgICAgPCEtLSBQVUJMSVNIIGFuZCBTVUJTQ1JJQkUgdG8gYWxsIHRvcGljcyBiZWxvdyAiZGF0YS88Y2xpZW50aWQ+LyIgLS0+CiAgICAgICAgICAgICAgICAgICAgPHRvcGljPmRhdGEvJHt7Y2xpZW50aWR9fS8jPC90b3BpYz4KICAgICAgICAgICAgICAgIDwvcGVybWlzc2lvbj4KICAgICAgICAgICAgICAgIDxwZXJtaXNzaW9uPgogICAgICAgICAgICAgICAgICAgIDwhLS0gUFVCTElTSCB0byB0b3BpYyAib3V0Z29pbmcvPGNsaWVudGlkPiIsIHJldGFpbmVkIG9ubHktLT4KICAgICAgICAgICAgICAgICAgICA8dG9waWM+b3V0Z29pbmcvJHt7Y2xpZW50aWR9fTwvdG9waWM+CiAgICAgICAgICAgICAgICAgICAgPGFjdGl2aXR5PlBVQkxJU0g8L2FjdGl2aXR5PgogICAgICAgICAgICAgICAgICAgIDxyZXRhaW4+UkVUQUlORUQ8L3JldGFpbj4KICAgICAgICAgICAgICAgIDwvcGVybWlzc2lvbj4KICAgICAgICAgICAgICAgIDxwZXJtaXNzaW9uPgogICAgICAgICAgICAgICAgICAgIDwhLS0gU1VCU0NSSUJFIHRvIHRvcGljICJpbmNvbWluZy88Y2xpZW50aWQ+Ii0tPgogICAgICAgICAgICAgICAgICAgIDx0b3BpYz5pbmNvbWluZy8ke3t1c2VybmFtZX19L2FjdGlvbnM8L3RvcGljPgogICAgICAgICAgICAgICAgICAgIDxhY3Rpdml0eT5TVUJTQ1JJQkU8L2FjdGl2aXR5PgogICAgICAgICAgICAgICAgPC9wZXJtaXNzaW9uPgogICAgICAgICAgICA8L3Blcm1pc3Npb25zPgogICAgICAgIDwvcm9sZT4KICAgICAgICA8cm9sZT4KICAgICAgICAgICAgPGlkPnN1cGVydXNlcjwvaWQ+CiAgICAgICAgICAgIDxwZXJtaXNzaW9ucz4KICAgICAgICAgICAgICAgIDxwZXJtaXNzaW9uPgogICAgICAgICAgICAgICAgICAgIDwhLS0gQWxsb3cgZXZlcnl0aGluZyAtLT4KICAgICAgICAgICAgICAgICAgICA8dG9waWM+IzwvdG9waWM+CiAgICAgICAgICAgICAgICA8L3Blcm1pc3Npb24+CiAgICAgICAgICAgIDwvcGVybWlzc2lvbnM+CiAgICAgICAgPC9yb2xlPgogICAgPC9yb2xlcz4KPC9maWxlLXJiYWM+Cg=="
            },
            "rbac_extension_config": {
              "title": "Configure RBAC extension configuration",
              "description": "extension-config.xml configuration for users and roles",
              "type": "string",
              "media": {
                "binaryEncoding": "base64",
                "type": "application/x-yaml"
              },
              "default": "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/Pgo8ZXh0ZW5zaW9uLWNvbmZpZ3VyYXRpb24+CgogICAgPCEtLSBSZWxvYWQgaW50ZXJ2YWwgZm9yIGNyZWRlbnRpYWxzIGluIHNlY29uZHMgLS0+CiAgICA8Y3JlZGVudGlhbHMtcmVsb2FkLWludGVydmFsPjYwPC9jcmVkZW50aWFscy1yZWxvYWQtaW50ZXJ2YWw+CgogICAgPCEtLSBJZiB0aGUgY3JlZGVudGlhbHMgZmlsZSBpcyB1c2luZyBIQVNIRUQgb3IgUExBSU4gcGFzc3dvcmRzIC0tPgogICAgPHBhc3N3b3JkLXR5cGU+UExBSU48L3Bhc3N3b3JkLXR5cGU+Cgo8L2V4dGVuc2lvbi1jb25maWd1cmF0aW9uPgo="
            }
          },
          "additionalProperties": false,
          "required": [
            "enable_rbac",
            "rbac_config",
            "rbac_extension_config"
          ]
        }
      },
      "additionalProperties": false,
      "required": [
        "limits",
        "security",
        "auth"
      ]
    }
  }
}
